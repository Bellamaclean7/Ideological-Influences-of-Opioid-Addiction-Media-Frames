---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - First author
  - Another author
thanks: "Code and data are available at: LINK."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(magrittr)
library(stats)
library(kableExtra)
library(ggplot2)
library(broom)
library(modelsummary)
library(here)
library(stargazer)
library(gt)
library(readr)
library(dplyr)
library(rstanarm)

model_ideology_frame <- read_rds(here::here("models/ideology_model.rds"))
show_col_types = FALSE

analysis_data <- read_csv(here::here("data/analysis_data/analysis_data.csv"))
show_col_types = FALSE
```

# Model
### Model Set-Up
This analysis seeks to understand the influence of political ideology and media framing on the public's policy support concerning opioid abuse treatment. A logistic regression model was constructed to predict the likelihood of policy support `policy` as a function of political ideology and media framing. The model includes two main ideology predictors: `conservative` and `liberal`. Additionally, the model incorporates media framing variables: `sympathetic_white` and `sympathetic_black` which represent sympathetic media narratives towards opioid users of different races, and `unsympathetic_white` and `unsympathetic_black`, representing unsympathetic narratives.

The terms `conservative:media_frames` and `liberal:media_frames` are designed to detect whether the relationship between media framing and policy support differs across the ideological spectrum. The response variable `Policy` is binary, indicating whether an individual supports treatment-focused policies for opioid abuse. Therefore, a logistic regression model (logit model) is employed to predict the probability of policy support, which is suitable for binary outcome data. The logit model is defined as:

```{r}
#| warning: false
#| echo: false

# Define the model formula. This formula is used to specify the relationship between a dependent variable and multiple independent variables in a regression model. The dependent variable (policy) is influenced by various predictors including political ideology (conservative and liberal) and media frames (sympathetic_white, sympathetic_black, unsympathetic_white, unsympathetic_black)
model_formula <- policy ~ conservative + liberal + 
                 sympathetic_white + sympathetic_black + 
                 unsympathetic_white + unsympathetic_black +
                 conservative*sympathetic_white + conservative*sympathetic_black +
                 conservative*unsympathetic_white + conservative*unsympathetic_black +
                 liberal*sympathetic_white + liberal*sympathetic_black +
                 liberal*unsympathetic_white + liberal*unsympathetic_black

# Print just the formula
print(model_formula)

```

The next step after setting up the logistic regression model is understanding how people's ideological beliefs and the various ways the media frames opioid use impact their support for policy . To do this, a coefficient table (@tbl-coefficients) was produced to capture the essence of the relationships between predictor variables. The goal is to quantify the relationship between each predictor variable (ideological beliefs, media framings, etc.) and interaction term (like conservative:media_frames) and the corresponding likelihood of policy support.

The coefficients, for instance, point to whether a factor, like political leaning or a specific type of media narrative, nudges public opinion towards or away from a certain policy stance, and importantly, how strong that nudge is. It also looks at standard errors, z-values, and p-values to check the confidence in these effectsâ€”are they solid or could they be just chance findings? And those 95% confidence intervals give a ballpark figure, showing where the true effect likely falls. @tbl-terms_explanation_table summarizes each term found in the coefficient table.

```{r}
#| warning: false
#| echo: false
#| label: tbl-terms_explanation_table
#| tbl-cap: Explanation of Terms in the Coefficient Table

# Creating a dataframe named 'terms_explanantion' with two columns 'term' and 'description' in order to define the explanations for each term in the coefficient table used later in the paper
terms_explanation <- data.frame(
  Term = c("Estimate", "Std.Error", "Statistic", "P.Value", "Conf.Low", "Conf.High"),
  Description = c("The coefficient estimate indicates the change in the log odds of the outcome for a one-unit increase in the predictor. Positive values indicate an increase in the likelihood of policy support, while negative values suggest a decrease.",
                  "The standard error of the coefficient estimate provides a measure of the estimate's precision. Smaller values indicate more precise estimates.",
                  "The test statistic (usually a Z-value) used to assess the significance of the predictor is derived from the coefficient estimate divided by its standard error.",
                  "The p-value associated with the test statistic indicates the probability of observing the data, or something more extreme, under the null hypothesis that the coefficient is zero. A p-value below a certain threshold (e.g., 0.05) suggests statistical significance.",
                  "The lower bound of the 95% confidence interval for the coefficient estimate provides a range within which we are 95% confident that the true coefficient value lies.",
                  "The upper bound of the 95% confidence interval for the coefficient estimate, together with the lower bound, offers insight into the estimate's uncertainty; narrower intervals indicate more precise estimates.")
)

# Create the table with kable and using kableExtra to format the table properly to fit on the pdf page nicely or else the columns would overlap to try and fit
kable(terms_explanation, format = "latex", booktabs = TRUE, col.names = c("Term", "Description"), align = c('l', 'l')) |>
  kable_styling(latex_options = c("striped", "hold_position"), font_size = 10) |>
  column_spec(2, width = "10cm")

```

```{r}
#| warning: false
#| echo: false
#| label: tbl-coefficients
#| tbl-cap: Logistic regression coefficient estimates, standard errors, z-values, p-values, and 95% confidence intervals.

# This line of code transforms the summary output of a logistic regression model (stored in 'model_ideology_frame') into a tidy format. The 'tidy' function is from the 'broom' package. It extracts the essential elements of the model's summary (e.g., coefficients, standard errors, z-values, and p-values) and augments it with 95% confidence intervals for each coefficient.
tidy_model <- tidy(model_ideology_frame, conf.int = TRUE)

# Create a table of coefficients with confidence intervals using kable and kableExtra
coef_table <- knitr::kable(tidy_model, "latex", booktabs = TRUE) |> # "booktabs = TRUE" is used to render a professional-quality table layout.
  kableExtra::kable_styling(latex_options = c("striped", "scale_down")) |> # this line using 'latex_options' applies striped rows for better readability and scaling down the table to fit within the page margins.
  kableExtra::add_header_above(c(" " = 5, "Confidence Interval" = 2)) # Header above confidence interval columns for better clarification

# Print the coefficient table
coef_table

```

```{r}
#| warning: false
#| echo: false
#| label: tbl-fit-statistics
#| tbl-cap: Model fit statistics including Akaike Information Criterion (AIC), Bayesian Information Criterion (BIC), and other relevant measures.

# Extract model fit statistics
fit_model <- glance(model_ideology_frame)

# Create and print a table for model fit statistics using the same methods as table 1 (tbl-coefficients)
fit_stats_table <- knitr::kable(fit_model, "latex", booktabs = TRUE) |>
  kableExtra::kable_styling(latex_options = c("striped", "scale_down"))

# Print the fit statistics table
fit_stats_table

```

# References


